{"version":3,"sources":["environments/environment.js","shared/components/AmiiboCallery/AmiiboGallery.jsx","shared/contexts/AmiibosContext.js","shared/components/buscador/Buscador.jsx","pages/Amiibos/Amiibos.jsx","shared/components/TextList/TextList.jsx","pages/GameSeries/GameSeries.jsx","shared/components/Menu/Menu.jsx","pages/Home/Home.jsx","shared/contexts/LanguageContext.js","pages/Contact/Contact.jsx","shared/styles/globalStyles.js","shared/styles/themes.js","shared/components/ToogleTheme/ToogleTheme.jsx","shared/components/AmiiboItem/AmiiboItem.jsx","pages/Amiibos/AmiiboDetail/AmiiboDetail.jsx","App.jsx","shared/hooks/useDarkMode.js","serviceWorker.js","index.js"],"names":["environment","AmiiboGallery","props","Figcaption","styled","figcaption","theme","backgroundOpacity","className","amiibos","map","item","index","key","to","tail","src","image","alt","name","AmiibosContext","React","createContext","Buscador","useForm","register","handleSubmit","watch","errors","onSubmit","data","console","log","filter","id","ref","required","type","Amiibos","useContext","setAmiibos","useState","amiibosFilter","setAmiisFilter","useEffect","axios","get","then","res","amiibosLocal","amiibo","localAmiibos","arrayAmiibos","i","length","includes","push","TextList","texts","GameSeries","gameSeries","setGameSeries","filteredAmiibos","uniqueArray","array","self","findIndex","t","Menu","LinkTo","span","Home","LanguageContext","Contact","language","htmlFor","defaultValue","pattern","email","value","favoriteAmiibo","cols","rows","message","GlobalStyles","createGlobalStyle","body","text","lightTheme","toggleBorder","background","darkTheme","Button","button","ToggleTheme","toggleTheme","onClick","AmiiboItem","amiiboInfo","amiiboSeries","character","release","jp","AmiiboDetail","useParams","setAmiibo","App","setTheme","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","Provider","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"8XAAaA,EACJ,iC,mICKF,SAASC,EAAeC,GAE3B,IAAMC,EAAaC,IAAOC,WAAV,KACE,qBAAGC,MAAkBC,qBAGvC,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,OACVN,EAAMO,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACf,yBAAKJ,UAAU,QAAQK,IAAKD,GACxB,kBAAC,IAAD,CAAME,GAAI,WAAaH,EAAKI,KAAMP,UAAU,oCACxC,4BAAQA,UAAU,0BACd,yBAAKQ,IAAKL,EAAKM,MAAOC,IAAI,GAAGV,UAAU,0BACvC,kBAACL,EAAD,CAAYK,UAAU,6BAA6BG,EAAKQ,cClBjF,IAAMC,EAAiBC,IAAMC,cAAc,I,QCE3C,SAASC,EAASrB,GAAQ,IAAD,EAEsBsB,cAA1CC,EAFoB,EAEpBA,SAAUC,EAFU,EAEVA,aAFU,EAEIC,MAFJ,EAEWC,OAQvC,OACI,6BACI,0BAAMC,SAAUH,GATP,SAAAI,GACbC,QAAQC,IAAI9B,GACZA,EAAM+B,OAAOH,MAO+BtB,UAAU,UAC9C,uCACA,2BAAOA,UAAU,UAAUW,KAAK,OAAOe,GAAG,OAAOC,IAAKV,EAAS,CAAEW,UAAU,MAC3E,2BAAO5B,UAAU,aAAa6B,KAAK,aCZ5C,SAASC,IAAW,MAIOC,qBAAWnB,GAJlB,mBAIhBX,EAJgB,KAIP+B,EAJO,OAKeC,mBAAS,IALxB,mBAKhBC,EALgB,KAKDC,EALC,KAkCvB,OA3BAC,qBAAU,WACNC,IAAMC,IAAI9C,EAAkB,UAAU+C,MAAK,SAAAC,GACvC,IAAMC,EAAeD,EAAIlB,KAAKoB,OAC9BnB,QAAQC,IAAIiB,GACZT,EAAWS,GACXN,EAAeM,QAEpB,IAqBC,6BACI,wBAAIzC,UAAU,gDAAd,WACA,kBAACe,EAAD,CAAUU,OArBlB,SAAuBH,GACnB,IAAMqB,EAAa1C,EACnBsB,QAAQC,IAAImB,GAEZ,IADA,IAAMC,EAAa,GACVC,EAAI,EAAEA,EAAE5C,EAAQ6C,OAAOD,IACxB5C,EAAQ4C,GAAGlC,KAAKoC,SAASzB,EAAKX,OAC9BiC,EAAaI,KAAK/C,EAAQ4C,IAInB,KAAXvB,EAAKX,MACLqB,EAAWW,GAEfR,EAAeS,GACfrB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAImB,MAOR,kBAAC,EAAD,CAAe1C,QAASiC,K,iBC1C7B,SAASe,EAAUvD,GACtB,OACI,yBAAKM,UAAU,eACX,yBAAKA,UAAU,OACVN,EAAMwD,MAAMhD,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKJ,UAAU,QAAQK,IAAKD,GACxB,yBAAKJ,UAAU,qBACX,wBAAIA,UAAU,wBAAwBG,EAAKQ,aCLhE,SAASwC,IAAe,IAAD,EAEUlB,mBAAS,IAFnB,mBAEnBmB,EAFmB,KAEPC,EAFO,KAW1B,OAPAjB,qBAAU,WACNC,IAAMC,IAAI9C,EAAkB,cAAc+C,MAAK,SAAAC,GAC3C,IAAMc,EAAkBC,EAAYf,EAAIlB,KAAKoB,OAAQ,QACrDW,EAAcC,QAEnB,IAGC,6BACI,wBAAItD,UAAU,gDAAd,eACA,kBAAC,EAAD,CAAUkD,MAAOE,KAK7B,IAAMG,EAAc,SAACC,EAAOnD,GACxB,OAAOmD,EAAM/B,QAAO,SAACtB,EAAMC,EAAOqD,GAAd,OAChBrD,IAAUqD,EAAKC,WAAU,SAACC,GAAD,OACrBA,EAAEtD,KAASF,EAAKE,U,0GCtBrB,SAASuD,IAEZ,IAAMC,EAASjE,IAAOkE,KAAV,KACM,qBAAGhE,MAAkBC,qBAGvC,OAEQ,yBAAKC,UAAU,UACX,kBAAC6D,EAAD,CAAQ7D,UAAU,gBAAe,kBAAC,IAAD,CAAMM,GAAG,KAAT,SACjC,kBAACuD,EAAD,CAAQ7D,UAAU,gBAAe,kBAAC,IAAD,CAAMM,GAAG,YAAT,YACjC,kBAACuD,EAAD,CAAQ7D,UAAU,gBAAe,kBAAC,IAAD,CAAMM,GAAG,eAAT,gBACjC,kBAACuD,EAAD,CAAQ7D,UAAU,gBAAe,kBAAC,IAAD,CAAMM,GAAG,YAAT,a,MCf1C,SAASyD,IACZ,OACI,6BACI,yBAAK/D,UAAU,MAAMQ,IAAI,4GACzB,wBAAIR,UAAU,gDAAd,gCCJL,IAAMgE,EAAkBnD,IAAMC,cAAc,MCG5C,SAASmD,IAAY,IAAD,EACOlC,qBAAWnB,GADlB,mBAChBX,EADgB,KAEjBiE,GAFiB,KAENnC,qBAAWiC,IAFL,EAI2BhD,cAA1CC,EAJe,EAIfA,SAAUC,EAJK,EAILA,aAAcC,EAJT,EAISA,MAAOC,EAJhB,EAIgBA,OAQvC,OAFAG,QAAQC,IAAIL,EAAM,YAGd,yBAAKnB,UAAU,iCACX,0BAAMqB,SAAUH,GAPP,SAAAI,GAAI,OAAIC,QAAQC,IAAIF,MAOWtB,UAAU,UAC9C,+CAAqBkE,GACrB,2BAAOC,QAAQ,QACX,0BAAMnE,UAAU,gBAAhB,QACA,2BAAOA,UAAU,UAAUW,KAAK,OAAOe,GAAG,OAAO0C,aAAa,+BAA4BzC,IAAKV,EAAS,CAAEW,UAAU,MACnHR,EAAOT,MAAQ,yDAGpB,2BAAOwD,QAAQ,SACX,0BAAMnE,UAAU,gBAAhB,SAEA,2BAAOA,UAAU,UAAUW,KAAK,QAAQe,GAAG,QAAQ0C,aAAa,wBACzDzC,IAAKV,EAAS,CAAEW,UAAU,EAAMyC,QAAS,+CAC/CjD,EAAOkD,OAAS,iFAGrB,2BAAOH,QAAQ,kBACX,0BAAMnE,UAAU,gBAAhB,mBACA,4BAAQA,UAAU,UAAUW,KAAK,iBAAiBe,GAAG,iBAAiBC,IAAKV,EAAS,CAAEW,UAAU,KAC3F3B,EAAQC,KAAI,SAAAwC,GAAM,OACf,4BAAQ6B,MAAO7B,EAAO/B,MAAO+B,EAAO/B,UAG3CS,EAAOoD,gBAAkB,yDAG9B,2BAAOL,QAAQ,WACX,0BAAMnE,UAAU,gBAAhB,WACA,8BAAUA,UAAU,UAAUW,KAAK,UAAUe,GAAG,UAAU+C,KAAK,KAAKC,KAAK,KAAK/C,IAAKV,EAAS,CAAEW,UAAU,MACvGR,EAAOuD,SAAW,yDAGvB,2BAAO3E,UAAU,aAAa6B,KAAK,a,kQCjD5C,IAAM+C,EAAeC,YAAH,KAEP,qBAAG/E,MAAkBgF,QAC1B,qBAAGhF,MAAkBiF,QAMrB,qBAAGjF,MAAkBiF,QCXrBC,EAAa,CACtBF,KAAM,OACNC,KAAM,UACNE,aAAc,OACdC,WAAY,UACZnF,kBAAmB,yBAGVoF,EAAY,CACrBL,KAAM,UACNC,KAAM,UACNE,aAAc,UACdC,WAAY,UACZnF,kBAAmB,yB,8NCVvB,IAAMqF,EAASxF,IAAOyF,OAAV,KACI,qBAAGvF,MAAkBoF,cACf,qBAAGpF,MAAkBmF,gBAkB5BK,EAXK,SAAC,GAA2B,EAA1BxF,MAA2B,IAAnByF,EAAkB,EAAlBA,YAC1B,OACI,kBAACH,EAAD,CAAQI,QAASD,GAAjB,iB,0GCTD,SAASE,EAAY/F,GAExB,IAAMC,EAAaC,IAAOC,WAAV,KACE,qBAAGC,MAAkBC,qBAGjC2F,EAAahG,EAAMgD,OAEzB,OACI,yBAAK1C,UAAU,iCACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iCACX,4BAAQA,UAAU,uBACd,yBAAKQ,IAAKkF,EAAWjF,MAAOC,IAAI,GAAGV,UAAU,uBAC7C,kBAACL,EAAD,CAAYK,UAAU,0BAA0B0F,EAAW/E,OAE/D,yBAAKX,UAAU,QACX,0CAAgB0F,EAAWtC,YAC3B,4CAAkBsC,EAAWC,cAC7B,yCAAeD,EAAWE,WAC1B,oCAAUF,EAAW7D,MACpB6D,GAAcA,EAAWG,SAAW,uCAAaH,EAAWG,QAAQC,Q,MCnBtF,SAASC,IAGZ,IAAMxF,EAAOyF,cAAYzF,KAHG,EAKA0B,mBAAS,IALT,mBAKrBS,EALqB,KAKbuD,EALa,KAQ5B7D,qBAAU,WACNC,IAAMC,IAAI9C,EAAkB,eAAiBe,GAAMgC,MAAK,SAAAC,GACpD,IAAME,EAAOF,EAAIlB,KAAKoB,OAAO,GAC7BuD,EAAUvD,QAEf,IAOH,OACI,6BACI,wBAAI1C,UAAU,gDAAd,iBACA,kBAAC,EAAD,CAAY0C,OAAQA,KCiCjBwD,MA9Cf,WAAiB,IAAD,EACkBjE,mBAAS,IAD3B,mBACLhC,EADK,KACI+B,EADJ,OAEoBC,mBAAS,MAF7B,mBAELiC,EAFK,aChBW,WAAO,IAAD,EACHjC,mBAAS,QADN,mBACtBnC,EADsB,KACfqG,EADe,KAGvBC,EAAU,SAAAC,GACZC,OAAOC,aAAaC,QAAQ,QAASH,GACrCF,EAASE,IAWb,OAJAjE,qBAAU,WACN,IAAMqE,EAAaH,OAAOC,aAAaG,QAAQ,SAC/CD,GAAcN,EAASM,KACxB,IACI,CAAC3G,EARa,WACGsG,EAAV,UAAVtG,EAA4B,OAAkB,WDapB6G,IANlB,mBAML7G,EANK,KAME8G,EANF,KAQNC,EAAsB,UAAV/G,EAAoBkF,EAAaG,EAEnD,OACI,kBAAC,IAAD,KACI,kBAACnB,EAAgB8C,SAAjB,CAA0BvC,MAAOL,GAC7B,kBAAC,IAAD,CAAepE,MAAO+G,GAClB,kBAACjC,EAAD,MACA,kBAAC,EAAD,CAAa9E,MAAOA,EAAOyF,YAAaqB,IAExC,yBAAK5G,UAAU,8DACX,kBAAC,EAAD,MAEA,kBAACY,EAAekG,SAAhB,CAAyBvC,MAAO,CAACtE,EAAS+B,IACtC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+E,KAAK,kBACR,kBAAChB,EAAD,OAEJ,kBAAC,IAAD,CAAOgB,KAAK,YACR,kBAACjF,EAAD,OAEJ,kBAAC,IAAD,CAAOiF,KAAK,eACR,kBAAC5D,EAAD,OAEJ,kBAAC,IAAD,CAAO4D,KAAK,YACR,kBAAC9C,EAAD,OAEJ,kBAAC,IAAD,CAAO8C,KAAK,KACR,kBAAChD,EAAD,cExChBiD,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpF,MAAK,SAAAqF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxG,QAAQwG,MAAMA,EAAMpD,c","file":"static/js/main.d3728afd.chunk.js","sourcesContent":["export const environment = {\n    url: 'https://www.amiiboapi.com/api/'\n}\n","import React from 'react';\nimport './AmiiboGallery.scss'\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n\nexport function AmiiboGallery (props) {\n\n    const Figcaption = styled.figcaption`\n  background-color: ${({ theme }) => theme.backgroundOpacity};\n  }`;\n\n    return (\n        <div className=\"c-amiibo-gallery\">\n            <div className=\"row\">\n                {props.amiibos.map((item, index) =>\n                    <div className=\"col-4\" key={index}>\n                        <Link to={'amiibos/' + item.tail} className=\"c-amiibo-gallery__item-container\">\n                            <figure className=\"c-amiibo-gallery__item\">\n                                <img src={item.image} alt=\"\" className=\"c-amiibo-gallery__img\"/>\n                                <Figcaption className=\"c-amiibo-gallery__caption\">{item.name}</Figcaption>\n                            </figure>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\n","import React from 'react';\n\nexport const AmiibosContext = React.createContext([]);\n","import React from \"react\";\nimport {useForm} from \"react-hook-form\";\n\n\nexport function Buscador(props) {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = data => {\n        console.log(props)\n        props.filter(data);\n\n    }\n\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"b-form\">\n                <label>Name</label>\n                <input className=\"b-input\" name=\"name\" id=\"name\" ref={register({ required: true })}/>\n                <input className=\"b-btn mt-3\" type=\"submit\"/>\n            </form>\n        </div>\n    )\n}","import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { AmiiboGallery } from \"../../shared/components/AmiiboCallery/AmiiboGallery\";\nimport { AmiibosContext } from \"../../shared/contexts/AmiibosContext\";\nimport {Buscador} from \"../../shared/components/buscador/Buscador\";\n\nexport function Amiibos () {\n\n    // const [amiibos, setAmiibos] = useState([]);\n\n    const [amiibos, setAmiibos] = useContext(AmiibosContext);\n    const [amiibosFilter, setAmiisFilter]=useState([]);\n\n    useEffect(() => {\n        axios.get(environment.url + 'amiibo').then(res => {\n            const amiibosLocal = res.data.amiibo;\n            console.log(amiibosLocal);\n            setAmiibos(amiibosLocal);\n            setAmiisFilter(amiibosLocal);\n        })\n    }, [])\n\n    function filterAmiibos(data){\n        const localAmiibos=amiibos;\n        console.log(localAmiibos)\n        const arrayAmiibos=[]\n        for (let i = 0;i<amiibos.length;i++){\n            if (amiibos[i].name.includes(data.name)){\n                arrayAmiibos.push(amiibos[i]);\n            }\n\n        }\n        if (data.name==\" \"){\n            setAmiibos(localAmiibos)\n        }\n        setAmiisFilter(arrayAmiibos);\n        console.log(arrayAmiibos)\n        console.log(localAmiibos)\n\n    }\n    return (\n        <div>\n            <h1 className=\"b-text-primary d-flex justify-content-center\">Amiibos</h1>\n            <Buscador filter={filterAmiibos}/>\n            <AmiiboGallery amiibos={amiibosFilter}/>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport './TextList.scss'\n\nexport function TextList (props) {\n    return (\n        <div className=\"c-text-list\">\n            <div className=\"row\">\n                {props.texts.map((item, index) =>\n                    <div className=\"col-4\" key={index}>\n                        <div className=\"c-text-list__item\">\n                            <h4 className=\"c-text-list__caption\">{item.name}</h4>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { environment } from \"../../environments/environment\";\nimport { TextList } from \"../../shared/components/TextList/TextList\";\n\nexport function GameSeries () {\n\n    const [gameSeries, setGameSeries] = useState([]);\n\n    useEffect(() => {\n        axios.get(environment.url + 'gameseries').then(res => {\n            const filteredAmiibos = uniqueArray(res.data.amiibo, 'name');\n            setGameSeries(filteredAmiibos);\n        })\n    }, [])\n\n    return (\n        <div>\n            <h1 className=\"b-text-primary d-flex justify-content-center\">Game Series</h1>\n            <TextList texts={gameSeries}/>\n        </div>\n    );\n}\n\nconst uniqueArray = (array, key) => {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => (\n            t[key] === item[key]\n        ))\n    )\n};\n","import React from 'react';\nimport './Menu.scss'\nimport { Link } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nexport function Menu () {\n\n    const LinkTo = styled.span`\n  background-color: ${({ theme }) => theme.backgroundOpacity};\n  }`;\n\n    return (\n\n            <nav className=\"c-menu\">\n                <LinkTo className=\"c-menu__link\"><Link to=\"/\">Home</Link></LinkTo>\n                <LinkTo className=\"c-menu__link\"><Link to=\"/amiibos\">Amiibos</Link></LinkTo>\n                <LinkTo className=\"c-menu__link\"><Link to=\"/gameseries\">Game Series</Link></LinkTo>\n                <LinkTo className=\"c-menu__link\"><Link to=\"/contact\">Contact</Link></LinkTo>\n            </nav>\n\n\n\n    );\n}\n\n","import React from 'react';\nimport \"./home.scss\"\nexport function Home () {\n    return (\n        <div>\n            <img className=\"img\" src=\"https://as.com/meristation/imagenes/2020/01/27/noticias/1580103553_990984_1580103753_noticia_normal.jpg\"/>\n            <h1 className=\"b-text-primary d-flex justify-content-center\">WELCOME TO AMIIBO REACT APP</h1>\n        </div>\n\n    );\n}\n\n","import React from 'react';\n\nexport const LanguageContext = React.createContext('es');\n","import React, { useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { AmiibosContext } from \"../../shared/contexts/AmiibosContext\";\nimport { LanguageContext } from \"../../shared/contexts/LanguageContext\";\n\nexport function Contact () {\n    const [amiibos, setAmiibos] = useContext(AmiibosContext);\n    const language = useContext(LanguageContext);\n\n    const { register, handleSubmit, watch, errors } = useForm();\n\n\n    const onSubmit = data => console.log(data);\n\n\n    console.log(watch(\"example\")); // watch input value by passing the name of it\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <form onSubmit={handleSubmit(onSubmit)} className=\"b-form\">\n                <p>Actual Language: {language}</p>\n                <label htmlFor=\"name\">\n                    <span className=\"b-text-label\">Name</span>\n                    <input className=\"b-input\" name=\"name\" id=\"name\" defaultValue=\"Alejandro González Prieto\" ref={register({ required: true })}/>\n                    {errors.name && <span>This field is required</span>}\n                </label>\n\n                <label htmlFor=\"email\">\n                    <span className=\"b-text-label\">Email</span>\n\n                    <input className=\"b-input\" name=\"email\" id=\"email\" defaultValue=\"alejandro@hotmail.com\"\n                           ref={register({ required: true, pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/ })}/>\n                    {errors.email && <span>This field is required and need to be an email</span>}\n                </label>\n\n                <label htmlFor=\"favoriteAmiibo\">\n                    <span className=\"b-text-label\">Favorite amiibo</span>\n                    <select className=\"b-input\" name=\"favoriteAmiibo\" id=\"favoriteAmiibo\" ref={register({ required: true })}>\n                        {amiibos.map(amiibo =>\n                            <option value={amiibo.name}>{amiibo.name}</option>\n                        )}\n                    </select>\n                    {errors.favoriteAmiibo && <span>This field is required</span>}\n                </label>\n\n                <label htmlFor=\"message\">\n                    <span className=\"b-text-label\">Message</span>\n                    <textarea className=\"b-input\" name=\"message\" id=\"message\" cols=\"30\" rows=\"10\" ref={register({ required: true })}/>\n                    {errors.message && <span>This field is required</span>}\n                </label>\n\n                <input className=\"b-btn mt-3\" type=\"submit\"/>\n\n            </form>\n        </div>\n    );\n}\n\n","import { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n  \n  a{\n    color: ${({ theme }) => theme.text};\n  }\n  `\n","export const lightTheme = {\n    body: '#FFF',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    background: '#363537',\n    backgroundOpacity: 'rgba(103,103,103,0.1)',\n\n}\nexport const darkTheme = {\n    body: '#282c34',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    background: '#282c34',\n    backgroundOpacity: 'rgba(255,255,255,0.1)',\n}\n","import React from 'react'\nimport { func, string } from 'prop-types';\nimport styled from \"styled-components\"\nconst Button = styled.button`\n  background: ${({ theme }) => theme.background};\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  color: white;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size:0.8rem;\n  padding: 0.6rem;\n  }`;\nconst ToggleTheme = ({theme,  toggleTheme }) => {\n    return (\n        <Button onClick={toggleTheme} >\n          Switch Theme\n        </Button>\n    );\n};\nToggleTheme.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\nexport default ToggleTheme;\n","import React from 'react';\nimport './AmiiboItem.scss'\nimport styled from \"styled-components\";\n\n\nexport function AmiiboItem (props) {\n\n    const Figcaption = styled.figcaption`\n  background-color: ${({ theme }) => theme.backgroundOpacity};\n  }`;\n\n    const amiiboInfo = props.amiibo;\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"c-amiibo-item\">\n                <div className=\"c-amiibo-item__item-container\">\n                    <figure className=\"c-amiibo-item__item\">\n                        <img src={amiiboInfo.image} alt=\"\" className=\"c-amiibo-item__img\"/>\n                        <Figcaption className=\"c-amiibo-item__caption\">{amiiboInfo.name}</Figcaption>\n                    </figure>\n                    <div className=\"py-4\">\n                        <p>Game serie: {amiiboInfo.gameSeries}</p>\n                        <p>Amiibo serie: {amiiboInfo.amiiboSeries}</p>\n                        <p>Character: {amiiboInfo.character}</p>\n                        <p>Type: {amiiboInfo.type}</p>\n                        {amiiboInfo && amiiboInfo.release && <p>Release: {amiiboInfo.release.jp}</p>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { environment } from \"../../../environments/environment\";\nimport { useParams } from 'react-router-dom';\nimport { AmiiboItem } from \"../../../shared/components/AmiiboItem/AmiiboItem\";\nimport moment from \"moment\";\n\nexport function AmiiboDetail () {\n\n\n    const tail = useParams().tail;\n\n    const [amiibo, setAmiibo] = useState({});\n\n\n    useEffect(() => {\n        axios.get(environment.url + 'amiibo?tail=' + tail).then(res => {\n            const amiibo=res.data.amiibo[0];\n            setAmiibo(amiibo);\n        })\n    }, [])\n\n\n    const formateData= (date)=>{\n      return moment(date,'yyyy-MM-dd').format('DD-MM-yyyy')\n    }\n\n    return (\n        <div>\n            <h1 className=\"b-text-primary d-flex justify-content-center\">Amiibo Detail</h1>\n            <AmiiboItem amiibo={amiibo}/>\n        </div>\n    );\n}\n\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Amiibos } from \"./pages/Amiibos/Amiibos\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { GameSeries } from \"./pages/GameSeries/GameSeries\";\nimport { Menu } from './shared/components/Menu/Menu';\nimport { Home } from \"./pages/Home/Home\";\nimport { Contact } from \"./pages/Contact/Contact\";\nimport { AmiibosContext } from \"./shared/contexts/AmiibosContext\";\nimport { LanguageContext } from \"./shared/contexts/LanguageContext\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./shared/styles/globalStyles\";\nimport { darkTheme, lightTheme } from \"./shared/styles/themes\";\nimport ToggleTheme from \"./shared/components/ToogleTheme/ToogleTheme\";\nimport { useDarkMode } from \"./shared/hooks/useDarkMode\";\nimport { AmiiboDetail } from \"./pages/Amiibos/AmiiboDetail/AmiiboDetail\";\n\nfunction App () {\n    const [amiibos, setAmiibos] = useState([]);\n    const [language, setLanguage] = useState('es');\n\n    /* Theme\n       ****************************************************************************/\n    const [theme, themeToggler] = useDarkMode();\n\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    return (\n        <Router>\n            <LanguageContext.Provider value={language}>\n                <ThemeProvider theme={themeMode}>\n                    <GlobalStyles/>\n                    <ToggleTheme theme={theme} toggleTheme={themeToggler}/>\n\n                    <div className=\"container-fluid justify-content-center my-4 u-font-size-16\">\n                        <Menu/>\n\n                        <AmiibosContext.Provider value={[amiibos, setAmiibos]}>\n                            <Switch>\n                                <Route path=\"/amiibos/:tail\">\n                                    <AmiiboDetail/>\n                                </Route>\n                                <Route path=\"/amiibos\">\n                                    <Amiibos/>\n                                </Route>\n                                <Route path=\"/gameseries\">\n                                    <GameSeries/>\n                                </Route>\n                                <Route path=\"/contact\">\n                                    <Contact/>\n                                </Route>\n                                <Route path=\"/\">\n                                    <Home/>\n                                </Route>\n                            </Switch>\n                        </AmiibosContext.Provider>\n                    </div>\n                </ThemeProvider>\n            </LanguageContext.Provider>\n        </Router>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('dark');\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme)\n    }, []);\n    return [theme, themeToggler]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}